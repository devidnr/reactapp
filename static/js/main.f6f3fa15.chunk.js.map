{"version":3,"sources":["resume.js","App.js","serviceWorker.js","index.js","delivery-man.svg"],"names":["Resume","props","fetch","then","response","json","data","console","log","info","profile","location","id","carrer","className","src","profilepic","alt","style","width","basics","name","role","href","phone","email","class","scope","edu","coll1","per1","coll2","per2","coll3","per3","skills","s1","s2","s3","s4","Hobbies","h1","h2","Home","profiles","map","values","index","key","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.f6f3fa15.chunk.js","sourcesContent":["import React from 'react';\r\nimport data from './resume.json';\r\nimport profilepic from './delivery-man.svg'\r\nexport default function Resume(props){\r\n fetch('https://jsonplaceholder.typicode.com/posts')\r\n    .then(response=>response.json())\r\n    .then(data=>console.log(data))\r\n    let info=data.profile[props.location.data.id]\r\nconsole.log(info.carrer)\r\n        return (\r\n          \r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-lg-3 m-2\">\r\n                    <div className=\"card shadow\">\r\n                    <div  className=\"card-body text-center\">\r\n                    <img src={profilepic} alt=\"pic\" style={{width:\"30%\"}}/>\r\n                    <h2>{info.basics.name}</h2>\r\n           <h4 className=\"text-secondary\">{info.basics.role}</h4>\r\n        <a href={\"tel:\"+info.basics.phone}>   \r\n         <h4>{info.basics.phone}</h4>\r\n             </a> \r\n        <a href={\"mailto:\"+info.basics.email}>\r\n            <h4>{info.basics.email}</h4>\r\n        </a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-8 m-2\">\r\n                 <div className=\"card shadow\" >\r\n                     <div className=\"card-body\">\r\n                    <h2>Carrer Objective</h2>\r\n                    <hr/>\r\n                    <p>\r\n                        { info.carrer}\r\n                    </p>\r\n                    <h2>Education Details</h2>\r\n                    <div class=\"container mt-5\">\r\n            <div class=\"table-responsive-lg\">\r\n        <table class=\"table table-bordered\r\n         table-striped table-hover\">\r\n            <thead class=\"thead-dark\">\r\n               <tr>\r\n                   <th scope=\"col\">S.NO</th>\r\n                   <th>Institute</th>\r\n                <th>percentage</th>\r\n           </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                  <td>1</td>\r\n                 <td >{info.edu.coll1}</td>\r\n                  <td>{info.edu.per1}</td>\r\n              </tr>\r\n              <tr>\r\n              <td>2</td>\r\n              <td >{info.edu.coll2}</td>\r\n                  <td>{info.edu.per2}</td>\r\n               \r\n            </tr>\r\n            <tr>\r\n            <td>3</td>\r\n            <td >{info.edu.coll3}</td>\r\n                  <td>{info.edu.per3}</td>\r\n            </tr>\r\n            \r\n            </tbody>\r\n           \r\n        </table>\r\n    </div>\r\n</div> \r\n<h2>Skills</h2>\r\n<ul>\r\n    <li>{info.skills.s1}</li>\r\n    <li>{info.skills.s2}</li>\r\n    <li>{info.skills.s3}</li>\r\n    <li>{info.skills.s4}</li>\r\n</ul>\r\n<h2>Hobbies</h2>\r\n<ul>\r\n    <li>{info.Hobbies.h1}</li>\r\n    <li>{info.Hobbies.h2}</li>\r\n    \r\n</ul>\r\n\r\n        </div>\r\n         </div>\r\n        </div>\r\n        </div> \r\n                   )\r\n}\r\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport profilepic from './delivery-man.svg'\nimport data from './data.json';\nimport './css/bootstrap.min.css';\nimport {BrowserRouter,Route,Link} from 'react-router-dom';\nimport Resume from'./resume';\nfunction App() {\n  return (\n    <BrowserRouter>\n   <Route exact path='/' component={Home}/>\n   <Route exact path='/resume' component={Resume}/>\n     </BrowserRouter>\n  );\n};\nlet Home=()=>{\n  let profiles=data.profile;\n  console.log(profiles);\n  return(\n    <div className=\"row justify-content-center\">\n      {profiles.map((values,index)=>(\n        <div className=\"col-lg-4 col-md-4 col-sm-10 mt-1\" key={index}>\n     <div className=\"card \">\n         <div  className=\"card-body text-center\">\n          <img src={profilepic} alt=\"pic\" style={{width:\"30%\"}}/>\n           <h2>{values.basics.name}</h2>\n           <h4 className=\"text-secondary\">{values.basics.role}</h4>\n        <a href={\"tel:\"+values.basics.phone}>   \n         <h4>{values.basics.phone}</h4>\n             </a> \n        <a href={\"mailto:\"+values.basics.email}>\n            <h4>{values.basics.email}</h4>\n        </a>\n        <Link to={{pathname:'/resume',data:{id:index}}} className=\"btn btn-primary\">View Profile</Link>\n          </div>\n        </div>\n        </div>\n      ))}\n    </div>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/delivery-man.4948508c.svg\";"],"sourceRoot":""}